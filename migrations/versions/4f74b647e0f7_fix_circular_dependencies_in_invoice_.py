"""Fix circular dependencies in Invoice model

Revision ID: 4f74b647e0f7
Revises: 3d746e6615ea
Create Date: 2025-07-15 21:32:53.002825

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4f74b647e0f7'
down_revision = '3d746e6615ea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_constraint('invoices_levy_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_service_charge_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_contractor_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_unit_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_approved_by_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_work_order_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('invoices_finance_batch_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key('fk_invoice_service_charge', 'service_charges', ['service_charge_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_levy', 'levies', ['levy_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_work_order', 'work_orders', ['work_order_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_finance_batch', 'payment_runs', ['finance_batch_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_unit', 'units', ['unit_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_contractor', 'users', ['contractor_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_invoice_approved_by', 'users', ['approved_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_constraint('fk_invoice_approved_by', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_contractor', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_unit', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_finance_batch', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_work_order', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_levy', type_='foreignkey')
        batch_op.drop_constraint('fk_invoice_service_charge', type_='foreignkey')
        batch_op.create_foreign_key('invoices_finance_batch_id_fkey', 'payment_runs', ['finance_batch_id'], ['id'])
        batch_op.create_foreign_key('invoices_work_order_id_fkey', 'work_orders', ['work_order_id'], ['id'])
        batch_op.create_foreign_key('invoices_approved_by_id_fkey', 'users', ['approved_by_id'], ['id'])
        batch_op.create_foreign_key('invoices_unit_id_fkey', 'units', ['unit_id'], ['id'])
        batch_op.create_foreign_key('invoices_contractor_id_fkey', 'users', ['contractor_id'], ['id'])
        batch_op.create_foreign_key('invoices_service_charge_id_fkey', 'service_charges', ['service_charge_id'], ['id'])
        batch_op.create_foreign_key('invoices_levy_id_fkey', 'levies', ['levy_id'], ['id'])

    # ### end Alembic commands ###
