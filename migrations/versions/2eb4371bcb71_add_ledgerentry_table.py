"""Add LedgerEntry Table

Revision ID: 2eb4371bcb71
Revises: 28f1ba6dd6f6
Create Date: 2025-07-13 14:31:41.345511

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2eb4371bcb71'
down_revision = '28f1ba6dd6f6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ledger_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debit_account_id', sa.Integer(), nullable=False),
    sa.Column('credit_account_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('entry_type', sa.String(length=50), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('memo', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_scorecard', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('gar_notes', sa.Text(), nullable=True),
    sa.Column('ai_flagged', sa.Boolean(), nullable=True),
    sa.Column('context_tags', sa.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('role_visibility', sa.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('third_party_match', sa.String(length=100), nullable=True),
    sa.Column('external_system', sa.String(length=100), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['bank_accounts.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['bank_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ledger_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ledger_entries_currency'), ['currency'], unique=False)
        batch_op.create_index(batch_op.f('ix_ledger_entries_entry_type'), ['entry_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_ledger_entries_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ledger_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ledger_entries_timestamp'))
        batch_op.drop_index(batch_op.f('ix_ledger_entries_entry_type'))
        batch_op.drop_index(batch_op.f('ix_ledger_entries_currency'))

    op.drop_table('ledger_entries')
    # ### end Alembic commands ###
