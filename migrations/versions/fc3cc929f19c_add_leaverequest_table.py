"""Add LeaveRequest Table

Revision ID: fc3cc929f19c
Revises: 4624eb00191e
Create Date: 2025-07-17 21:11:18.142229

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc3cc929f19c'
down_revision = '4624eb00191e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leave_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('leave_type', sa.String(length=50), nullable=True),
    sa.Column('leave_category', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('total_days', sa.Float(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('requested_at', sa.DateTime(), nullable=True),
    sa.Column('leave_balance_at_request', sa.Float(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('visibility_scope', sa.String(length=100), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('shared_with_director', sa.Boolean(), nullable=True),
    sa.Column('consent_verified', sa.Boolean(), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True),
    sa.Column('source_system', sa.String(length=100), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('is_external', sa.Boolean(), nullable=True),
    sa.Column('leave_policy_url', sa.String(length=255), nullable=True),
    sa.Column('is_policy_violation', sa.Boolean(), nullable=True),
    sa.Column('review_category', sa.String(length=50), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('parsing_status', sa.String(length=50), nullable=True),
    sa.Column('parsed_at', sa.DateTime(), nullable=True),
    sa.Column('parsed_by_ai_version', sa.String(length=50), nullable=True),
    sa.Column('ai_source_type', sa.String(length=50), nullable=True),
    sa.Column('is_ai_processed', sa.Boolean(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_profile_locked', sa.Boolean(), nullable=True),
    sa.Column('flagged_sections', sa.JSON(), nullable=True),
    sa.Column('gar_flags', sa.Text(), nullable=True),
    sa.Column('gar_score', sa.Float(), nullable=True),
    sa.Column('gar_comments', sa.Text(), nullable=True),
    sa.Column('requires_manual_review', sa.Boolean(), nullable=True),
    sa.Column('last_reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('conflict_flag', sa.Boolean(), nullable=True),
    sa.Column('conflict_notes', sa.Text(), nullable=True),
    sa.Column('impacted_services', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('suggested_alternatives', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('leave_requests')
    # ### end Alembic commands ###
