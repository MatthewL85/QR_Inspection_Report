"""Add WorkOrderSettings Table

Revision ID: a9c581cbdfbc
Revises: 0947458a46b4
Create Date: 2025-07-15 20:36:48.014104

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9c581cbdfbc'
down_revision = '0947458a46b4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('work_order_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('default_response_time_hours', sa.Integer(), nullable=True),
    sa.Column('default_completion_time_hours', sa.Integer(), nullable=True),
    sa.Column('enable_preferred_contractor_routing', sa.Boolean(), nullable=True),
    sa.Column('allow_multi_contractor_routing', sa.Boolean(), nullable=True),
    sa.Column('auto_reassign_on_rejection', sa.Boolean(), nullable=True),
    sa.Column('require_completion_notes', sa.Boolean(), nullable=True),
    sa.Column('allow_media_upload_on_completion', sa.Boolean(), nullable=True),
    sa.Column('enable_contractor_ratings', sa.Boolean(), nullable=True),
    sa.Column('allow_director_feedback', sa.Boolean(), nullable=True),
    sa.Column('show_performance_summary_to_pm', sa.Boolean(), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('parsing_status', sa.String(length=50), nullable=True),
    sa.Column('parsed_by_ai_version', sa.String(length=50), nullable=True),
    sa.Column('ai_source_type', sa.String(length=50), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('is_ai_processed', sa.Boolean(), nullable=True),
    sa.Column('gar_flags', sa.Text(), nullable=True),
    sa.Column('gar_risk_score', sa.Float(), nullable=True),
    sa.Column('gar_recommendation', sa.Text(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('escalation_threshold_hours', sa.Integer(), nullable=True),
    sa.Column('notify_on_overdue', sa.Boolean(), nullable=True),
    sa.Column('require_compliance_docs', sa.Boolean(), nullable=True),
    sa.Column('lock_assignment_post_acceptance', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('member_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'members', ['member_id'], ['id'])

    with op.batch_alter_table('work_orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('maintenance_request_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'maintenance_requests', ['maintenance_request_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_orders', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('maintenance_request_id')

    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('member_id')

    op.drop_table('work_order_settings')
    # ### end Alembic commands ###
