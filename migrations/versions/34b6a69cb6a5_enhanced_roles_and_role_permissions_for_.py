"""Enhanced roles and role_permissions for AI/GAR governance

Revision ID: 34b6a69cb6a5
Revises: 1171d7405519
Create Date: 2025-07-19 08:44:09.289921

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '34b6a69cb6a5'
down_revision = '1171d7405519'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gar_flagged', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('gar_risk_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('gar_conflict_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('gar_flagged_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('gar_resolution', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('gar_resolved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('gar_suggestion', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_by_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['updated_by_id'], ['id'])

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('permissions_matrix', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('is_assignable', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('gar_ai_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('gar_privilege_conflicts', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('gar_ai_suggestion', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('gar_ai_resolution', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('gar_feedback_status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('gar_flagged_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('gar_resolved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_by_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['updated_by_id'], ['id'])
        batch_op.drop_column('permissions')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('updated_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('gar_resolved_at')
        batch_op.drop_column('gar_flagged_at')
        batch_op.drop_column('gar_feedback_status')
        batch_op.drop_column('gar_ai_resolution')
        batch_op.drop_column('gar_ai_suggestion')
        batch_op.drop_column('gar_privilege_conflicts')
        batch_op.drop_column('gar_ai_score')
        batch_op.drop_column('is_assignable')
        batch_op.drop_column('permissions_matrix')

    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('updated_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('gar_suggestion')
        batch_op.drop_column('gar_resolved_at')
        batch_op.drop_column('gar_resolution')
        batch_op.drop_column('gar_flagged_at')
        batch_op.drop_column('gar_conflict_reason')
        batch_op.drop_column('gar_risk_score')
        batch_op.drop_column('gar_flagged')

    # ### end Alembic commands ###
