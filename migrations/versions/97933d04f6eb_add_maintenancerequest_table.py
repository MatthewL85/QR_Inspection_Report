"""Add MaintenanceRequest Table

Revision ID: 97933d04f6eb
Revises: 26a7bbc7046b
Create Date: 2025-07-15 20:29:22.556308

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '97933d04f6eb'
down_revision = '26a7bbc7046b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maintenance_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('work_order_id', sa.Integer(), nullable=True),
    sa.Column('requested_by_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('urgency_level', sa.String(length=50), nullable=True),
    sa.Column('urgency_reason', sa.String(length=255), nullable=True),
    sa.Column('request_channel', sa.String(length=50), nullable=True),
    sa.Column('attachment_url', sa.String(length=500), nullable=True),
    sa.Column('attachments_count', sa.Integer(), nullable=True),
    sa.Column('media_uploaded', sa.Boolean(), nullable=True),
    sa.Column('doc_links', sa.JSON(), nullable=True),
    sa.Column('photo_links', sa.JSON(), nullable=True),
    sa.Column('visibility_scope', sa.String(length=100), nullable=True),
    sa.Column('consent_verified', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('shared_with_director', sa.Boolean(), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True),
    sa.Column('source_system', sa.String(length=100), nullable=True),
    sa.Column('is_external', sa.Boolean(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('ai_tags', sa.Text(), nullable=True),
    sa.Column('ai_priority_score', sa.Float(), nullable=True),
    sa.Column('gar_summary', sa.Text(), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('parsing_status', sa.String(length=50), nullable=True),
    sa.Column('parsed_at', sa.DateTime(), nullable=True),
    sa.Column('parsed_by_ai_version', sa.String(length=50), nullable=True),
    sa.Column('ai_source_type', sa.String(length=50), nullable=True),
    sa.Column('is_ai_processed', sa.Boolean(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_profile_locked', sa.Boolean(), nullable=True),
    sa.Column('flagged_sections', sa.JSON(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['requested_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.ForeignKeyConstraint(['work_order_id'], ['work_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aged_creditors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_order_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    with op.batch_alter_table('contractor_feedback', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_order_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'work_orders', ['work_order_id'], ['id'])

    with op.batch_alter_table('contractor_performance', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_order_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'work_orders', ['work_order_id'], ['id'])

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_order_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'work_orders', ['work_order_id'], ['id'])

    with op.batch_alter_table('outstanding_supplier_invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('work_order_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'work_orders', ['work_order_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('outstanding_supplier_invoices', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('work_order_id')

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('work_order_id')

    with op.batch_alter_table('contractor_performance', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('work_order_id')

    with op.batch_alter_table('contractor_feedback', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('work_order_id')

    with op.batch_alter_table('aged_creditors', schema=None) as batch_op:
        batch_op.drop_column('work_order_ids')

    op.drop_table('maintenance_requests')
    # ### end Alembic commands ###
