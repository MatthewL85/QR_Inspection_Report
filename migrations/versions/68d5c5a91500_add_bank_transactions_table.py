"""Add bank_transactions table

Revision ID: 68d5c5a91500
Revises: 231a843ed4ee
Create Date: 2025-07-13 13:23:25.228013

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '68d5c5a91500'
down_revision = '231a843ed4ee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=14, scale=2), nullable=True),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciled_by_id', sa.Integer(), nullable=True),
    sa.Column('reconciled_at', sa.DateTime(), nullable=True),
    sa.Column('reconciliation_engine_id', sa.Integer(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('flagged_reason', sa.String(length=255), nullable=True),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('flagged_by_gar', sa.Boolean(), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('gar_notes', sa.Text(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('external_ref', sa.String(length=150), nullable=True),
    sa.Column('integration_status', sa.String(length=50), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_accounts.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['reconciled_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_engine_id'], ['reconciliation_engine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('levy_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'levies', ['levy_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('levy_id')

    op.drop_table('bank_transactions')
    # ### end Alembic commands ###
