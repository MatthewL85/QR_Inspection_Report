"""Create reconciliation_batches table

Revision ID: 3e08a466b876
Revises: 739c492b1dba
Create Date: 2025-07-13 12:56:57.390718

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e08a466b876'
down_revision = '739c492b1dba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reconciliation_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reconciliation_date', sa.Date(), nullable=False),
    sa.Column('statement_period_start', sa.Date(), nullable=False),
    sa.Column('statement_period_end', sa.Date(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('performed_by_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('opening_balance', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('closing_balance', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('reconciled_balance', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciliation_status', sa.String(length=50), nullable=True),
    sa.Column('matched_transactions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('unmatched_transactions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_summary', sa.Text(), nullable=True),
    sa.Column('gar_score', sa.String(length=20), nullable=True),
    sa.Column('gar_recommendation', sa.Text(), nullable=True),
    sa.Column('flagged_by_gar', sa.Boolean(), nullable=True),
    sa.Column('requires_human_review', sa.Boolean(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('batch_notes', sa.Text(), nullable=True),
    sa.Column('parsed_by_ai_version', sa.String(length=50), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['performed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('service_charges', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payment_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'payments', ['payment_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_charges', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('payment_id')

    op.drop_table('reconciliation_batches')
    # ### end Alembic commands ###
