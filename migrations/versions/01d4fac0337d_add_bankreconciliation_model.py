"""Add BankReconciliation model

Revision ID: 01d4fac0337d
Revises: 934d2c5a6d28
Create Date: 2025-07-13 19:48:44.482564

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01d4fac0337d'
down_revision = '934d2c5a6d28'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ledger_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('finance_batch_id', sa.Integer(), nullable=True),
    sa.Column('ledger_entry_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('levy_id', sa.Integer(), nullable=True),
    sa.Column('service_charge_id', sa.Integer(), nullable=True),
    sa.Column('allocated_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('allocation_date', sa.DateTime(), nullable=True),
    sa.Column('allocation_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('access_scope', sa.String(length=50), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('ai_parsed_summary', sa.Text(), nullable=True),
    sa.Column('ai_extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('ai_notes', sa.Text(), nullable=True),
    sa.Column('ai_confidence_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('ai_model_used', sa.String(length=100), nullable=True),
    sa.Column('gar_query_context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_conversation_log', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_message_context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('gar_rating', sa.String(length=10), nullable=True),
    sa.Column('gar_resolution_flag', sa.Boolean(), nullable=True),
    sa.Column('external_reference', sa.String(length=150), nullable=True),
    sa.Column('integration_status', sa.String(length=50), nullable=True),
    sa.Column('source_module', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['finance_batch_id'], ['finance_batches.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['ledger_entry_id'], ['ledger_entries.id'], ),
    sa.ForeignKeyConstraint(['levy_id'], ['levies.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['service_charge_id'], ['service_charges.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_reconciliations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('reconciliation_batch_id', sa.Integer(), nullable=True),
    sa.Column('reconciliation_engine_id', sa.Integer(), nullable=True),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('statement_opening_balance', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('statement_closing_balance', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('platform_recorded_balance', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('difference', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('flagged_entries', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('external_reference', sa.String(length=150), nullable=True),
    sa.Column('integration_status', sa.String(length=50), nullable=True),
    sa.Column('synced_at', sa.DateTime(), nullable=True),
    sa.Column('ai_flagged', sa.Boolean(), nullable=True),
    sa.Column('ai_discrepancy_summary', sa.Text(), nullable=True),
    sa.Column('ai_recommendation', sa.Text(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('gar_review_score', sa.Float(), nullable=True),
    sa.Column('gar_alerts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('is_gar_verified', sa.Boolean(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('reconciled_by_id', sa.Integer(), nullable=True),
    sa.Column('reconciled_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bank_accounts.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reconciled_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_batch_id'], ['reconciliation_batches.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_engine_id'], ['reconciliation_engine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bank_reconciliations')
    op.drop_table('ledger_allocations')
    # ### end Alembic commands ###
