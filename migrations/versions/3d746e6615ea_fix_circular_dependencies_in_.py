"""Fix circular dependencies in BankTransaction model

Revision ID: 3d746e6615ea
Revises: f70ca224fde0
Create Date: 2025-07-15 21:30:35.155507

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d746e6615ea'
down_revision = 'f70ca224fde0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bank_transactions', schema=None) as batch_op:
        batch_op.drop_constraint('bank_transactions_service_charge_payment_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('bank_transactions_created_by_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('bank_transactions_invoice_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('bank_transactions_levy_payment_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('bank_transactions_reconciliation_engine_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('bank_transactions_reconciled_by_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key('fk_transaction_rec_engine', 'reconciliation_engine', ['reconciliation_engine_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_transaction_scp', 'service_charge_payments', ['service_charge_payment_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_transaction_reconciled_by', 'users', ['reconciled_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_transaction_created_by', 'users', ['created_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_transaction_levy', 'levy_payments', ['levy_payment_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_transaction_invoice', 'invoices', ['invoice_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bank_transactions', schema=None) as batch_op:
        batch_op.drop_constraint('fk_transaction_invoice', type_='foreignkey')
        batch_op.drop_constraint('fk_transaction_levy', type_='foreignkey')
        batch_op.drop_constraint('fk_transaction_created_by', type_='foreignkey')
        batch_op.drop_constraint('fk_transaction_reconciled_by', type_='foreignkey')
        batch_op.drop_constraint('fk_transaction_scp', type_='foreignkey')
        batch_op.drop_constraint('fk_transaction_rec_engine', type_='foreignkey')
        batch_op.create_foreign_key('bank_transactions_reconciled_by_id_fkey', 'users', ['reconciled_by_id'], ['id'])
        batch_op.create_foreign_key('bank_transactions_reconciliation_engine_id_fkey', 'reconciliation_engine', ['reconciliation_engine_id'], ['id'])
        batch_op.create_foreign_key('bank_transactions_levy_payment_id_fkey', 'levy_payments', ['levy_payment_id'], ['id'])
        batch_op.create_foreign_key('bank_transactions_invoice_id_fkey', 'invoices', ['invoice_id'], ['id'])
        batch_op.create_foreign_key('bank_transactions_created_by_id_fkey', 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key('bank_transactions_service_charge_payment_id_fkey', 'service_charge_payments', ['service_charge_payment_id'], ['id'])

    # ### end Alembic commands ###
