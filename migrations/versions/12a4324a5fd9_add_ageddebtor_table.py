"""Add AgedDebtor table

Revision ID: 12a4324a5fd9
Revises: a378e9e8b9a6
Create Date: 2025-07-14 19:37:02.784660

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '12a4324a5fd9'
down_revision = 'a378e9e8b9a6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aged_debtors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('financial_year', sa.String(length=10), nullable=True),
    sa.Column('snapshot_label', sa.String(length=100), nullable=True),
    sa.Column('current_due', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('due_30_days', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('due_60_days', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('due_90_days', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('due_120_days_plus', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_outstanding', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('arrears_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('service_charge_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('levy_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('external_ref', sa.String(length=100), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('flagged_by_ai', sa.Boolean(), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('gar_risk_score', sa.Float(), nullable=True),
    sa.Column('gar_recommendation', sa.String(length=255), nullable=True),
    sa.Column('ai_notes', sa.Text(), nullable=True),
    sa.Column('is_gar_verified', sa.Boolean(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('is_disputed', sa.Boolean(), nullable=True),
    sa.Column('dispute_reason', sa.Text(), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciliation_reference', sa.String(length=100), nullable=True),
    sa.Column('generated_by_id', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['generated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outstanding_supplier_invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=100), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('amount_due', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('ai_extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_validated', sa.Boolean(), nullable=True),
    sa.Column('reason_for_dispute', sa.String(length=255), nullable=True),
    sa.Column('smart_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('reconciliation_status', sa.String(length=50), nullable=True),
    sa.Column('matched_transaction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['matched_transaction_id'], ['bank_transactions.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('outstanding_supplier_invoices')
    op.drop_table('aged_debtors')
    # ### end Alembic commands ###
