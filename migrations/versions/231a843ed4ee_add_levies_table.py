"""Add levies table

Revision ID: 231a843ed4ee
Revises: e17b5bf74b25
Create Date: 2025-07-13 13:19:01.374104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '231a843ed4ee'
down_revision = 'e17b5bf74b25'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('levies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount_due', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('amount_paid', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('issued_date', sa.DateTime(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_installment_allowed', sa.Boolean(), nullable=True),
    sa.Column('is_finalised', sa.Boolean(), nullable=True),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('reason_locked', sa.Text(), nullable=True),
    sa.Column('parsed_summary', sa.Text(), nullable=True),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_recommendation', sa.String(length=255), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('flagged_by_ai', sa.Boolean(), nullable=True),
    sa.Column('ai_notes', sa.Text(), nullable=True),
    sa.Column('validated_by_gar', sa.Boolean(), nullable=True),
    sa.Column('synced_with_provider', sa.String(length=100), nullable=True),
    sa.Column('external_reference_id', sa.String(length=100), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('reference_code', sa.String(length=100), nullable=True),
    sa.Column('related_documents', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ip_logged_from', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reconciliation_engine', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bank_account_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'bank_accounts', ['bank_account_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reconciliation_engine', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('bank_account_id')

    op.drop_table('levies')
    # ### end Alembic commands ###
