"""Fix circular dependencies in ServiceChargePayment model

Revision ID: 86f898093553
Revises: 4f74b647e0f7
Create Date: 2025-07-15 21:34:46.195014

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '86f898093553'
down_revision = '4f74b647e0f7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_charge_payments', schema=None) as batch_op:
        batch_op.drop_constraint('service_charge_payments_service_charge_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('service_charge_payments_reconciliation_batch_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('service_charge_payments_created_by_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('service_charge_payments_modified_by_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('service_charge_payments_paid_by_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('service_charge_payments_unit_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key('fk_scp_recon_batch', 'reconciliation_batches', ['reconciliation_batch_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_scp_modified_by', 'users', ['modified_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_scp_service_charge', 'service_charges', ['service_charge_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_scp_created_by', 'users', ['created_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_scp_paid_by', 'users', ['paid_by_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)
        batch_op.create_foreign_key('fk_scp_unit', 'units', ['unit_id'], ['id'], initially='DEFERRED', deferrable=True, use_alter=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_charge_payments', schema=None) as batch_op:
        batch_op.drop_constraint('fk_scp_unit', type_='foreignkey')
        batch_op.drop_constraint('fk_scp_paid_by', type_='foreignkey')
        batch_op.drop_constraint('fk_scp_created_by', type_='foreignkey')
        batch_op.drop_constraint('fk_scp_service_charge', type_='foreignkey')
        batch_op.drop_constraint('fk_scp_modified_by', type_='foreignkey')
        batch_op.drop_constraint('fk_scp_recon_batch', type_='foreignkey')
        batch_op.create_foreign_key('service_charge_payments_unit_id_fkey', 'units', ['unit_id'], ['id'])
        batch_op.create_foreign_key('service_charge_payments_paid_by_id_fkey', 'users', ['paid_by_id'], ['id'])
        batch_op.create_foreign_key('service_charge_payments_modified_by_id_fkey', 'users', ['modified_by_id'], ['id'])
        batch_op.create_foreign_key('service_charge_payments_created_by_id_fkey', 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key('service_charge_payments_reconciliation_batch_id_fkey', 'reconciliation_batches', ['reconciliation_batch_id'], ['id'])
        batch_op.create_foreign_key('service_charge_payments_service_charge_id_fkey', 'service_charges', ['service_charge_id'], ['id'])

    # ### end Alembic commands ###
