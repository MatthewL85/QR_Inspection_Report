"""Add service_charge_payments table

Revision ID: 60d6d32d6a6f
Revises: 68d5c5a91500
Create Date: 2025-07-13 13:25:33.645459

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '60d6d32d6a6f'
down_revision = '68d5c5a91500'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_charge_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_charge_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('paid_by_id', sa.Integer(), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('receipt_reference', sa.String(length=100), nullable=True),
    sa.Column('transaction_reference', sa.String(length=100), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('allocation_notes', sa.String(length=255), nullable=True),
    sa.Column('is_partial', sa.Boolean(), nullable=True),
    sa.Column('is_late', sa.Boolean(), nullable=True),
    sa.Column('is_reversed', sa.Boolean(), nullable=True),
    sa.Column('reversal_reason', sa.Text(), nullable=True),
    sa.Column('is_refundable', sa.Boolean(), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciliation_batch_id', sa.Integer(), nullable=True),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('gar_context_reference', sa.String(length=100), nullable=True),
    sa.Column('ai_flagged', sa.Boolean(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('gar_notes', sa.Text(), nullable=True),
    sa.Column('approved_by_gar', sa.Boolean(), nullable=True),
    sa.Column('gar_chat_ready', sa.Boolean(), nullable=True),
    sa.Column('gar_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['paid_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_batch_id'], ['reconciliation_batches.id'], ),
    sa.ForeignKeyConstraint(['service_charge_id'], ['service_charges.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('matched_transaction_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'bank_transactions', ['matched_transaction_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('matched_transaction_id')

    op.drop_table('service_charge_payments')
    # ### end Alembic commands ###
